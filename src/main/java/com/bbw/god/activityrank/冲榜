业务说明 => UI|接口 => 数据访问图 => 数据配置|实体结构 => 逻辑编程
【冲榜活动】
充值榜、元素消耗：有上榜条件
富豪榜：（不包括俸禄、今日充值、不加入富豪榜的奖励邮件、封神台兑换等获得的铜钱）
攻城榜、等级榜、胜利宝箱、远征榜：无
-除富豪榜按时间周外，其他的活动基于开服时间尽心7日更新
-每周三个，按次序更新
第1周：富豪榜、攻城榜、等级榜
第2周：充值榜、富豪榜、胜利宝箱
第3周：充值榜、富豪榜、元素消耗
第4周：充值榜、富豪榜、远征榜
第5周：充值榜、富豪榜、胜利宝箱
。。。

开发说明
方案一
-冲榜数据和其他活动分开
-用户活动新增进度progress、状态status，并基于事件统一处理progress（注意：补发订单和产品发放要经过区服或者自行处理progress）
-所有活动在每个区服都有自己的实例，周期性活动每个周期有一个实例ServerActivity\ServerActivityRank
-管理后台：修改活动，更新cfg缓存；新增节日活动，更新cfg缓存，并新增在各个区服的实例
-开服新增5期冲榜、5期累计充值、5期累天充值、35期今日充值、35期今日消费(第一周没有)、35期领体力、2期签到
-每月1号定时新增5期冲榜、5期累计充值、5期累天充值、35期今日充值、35期今日消费、35期领体力、2期签到
利弊：开发不用关心cfg（不变）、获取活动状态方便（需要添加对应活动的事件机制）、需要维护更多的活动实例生成

方案二
-冲榜数据和其他活动分开
-需要时去统计获得活动状态
-只有冲榜、累计充值、累天充值需要区服实例
-管理后台：修改活动，更新cfg缓存；新增节日活动，更新cfg缓存
-开服新增5期冲榜、5期累计充值、5期累天充值、新手特惠、攻城略地
-每月1号定时新增5期冲榜、5期累计充值、5期累天充值
利弊：开发需要关心cfg（变化）、获取活动状态较麻烦（基于统计获取状态，无需添加对应活动的事件机制）、维护较少的活动实例生成

